openapi: 3.1.0
info:
  title: rocd REST API
  description: Real-time audio streaming daemon.
  license:
    name: MPL-2.0
    identifier: MPL-2.0
  version: 0.1.0
paths:
  /peers:
    get:
      operationId: list_peers
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/PeerSpec'
  /peers/{peer_uid}:
    get:
      operationId: read_peer
      parameters:
      - name: peer_uid
        in: path
        required: true
        schema:
          type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PeerSpec'
    put:
      operationId: update_peer
      parameters:
      - name: peer_uid
        in: path
        required: true
        schema:
          type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PeerSpec'
  /peers/{peer_uid}/endpoints:
    get:
      operationId: list_endpoints
      parameters:
      - name: peer_uid
        in: path
        required: true
        schema:
          type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/EndpointSpec'
  /peers/{peer_uid}/endpoints/{endpoint_uid}:
    get:
      operationId: read_endpoint
      parameters:
      - name: peer_uid
        in: path
        required: true
        schema:
          type: string
      - name: endpoint_uid
        in: path
        required: true
        schema:
          type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EndpointSpec'
    put:
      operationId: update_endpoint
      parameters:
      - name: peer_uid
        in: path
        required: true
        schema:
          type: string
      - name: endpoint_uid
        in: path
        required: true
        schema:
          type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EndpointSpec'
  /streams:
    get:
      operationId: list_streams
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/StreamSpec'
  /streams/{stream_uid}:
    get:
      operationId: read_stream
      parameters:
      - name: stream_uid
        in: path
        required: true
        schema:
          type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StreamSpec'
    put:
      operationId: update_stream
      parameters:
      - name: stream_uid
        in: path
        required: true
        schema:
          type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StreamSpec'
components:
  schemas:
    ConnectionSpec:
      oneOf:
      - type: object
        title: EndpointConnection
        required:
        - connection_type
        - endpoint_uri
        properties:
          connection_type:
            $ref: '#/components/schemas/ConnectionType'
          endpoint_uri:
            type: string
      - type: object
        title: ExternalConnection
        required:
        - connection_type
        - media_uri
        - repair_uri
        - control_uri
        properties:
          connection_type:
            $ref: '#/components/schemas/ConnectionType'
          media_uri:
            type: string
          repair_uri:
            type: string
          control_uri:
            type: string
    ConnectionType:
      type: string
      enum:
      - endpoint
      - external
    DriverId:
      type: string
      enum:
      - unspecified
      - pipewire
    EndpointDir:
      type: string
      enum:
      - input
      - output
      - duplex
    EndpointSpec:
      type: object
      required:
      - endpoint_uri
      - endpoint_uid
      - endpoint_type
      - stream_direction
      - driver
      - display_name
      - system_name
      properties:
        endpoint_uri:
          type: string
        endpoint_uid:
          type: string
        endpoint_type:
          $ref: '#/components/schemas/EndpointType'
        stream_direction:
          $ref: '#/components/schemas/EndpointDir'
        driver:
          $ref: '#/components/schemas/DriverId'
        display_name:
          type: string
        system_name:
          type: string
    EndpointType:
      type: string
      enum:
      - system_device
      - streaming_device
    PeerSpec:
      type: object
      required:
      - peer_uri
      - peer_uid
      properties:
        peer_uri:
          type: string
        peer_uid:
          type: string
    StreamSpec:
      type: object
      required:
      - stream_uri
      - stream_uid
      - source
      - destination
      properties:
        stream_uri:
          type: string
        stream_uid:
          type: string
        source:
          $ref: '#/components/schemas/ConnectionSpec'
        destination:
          $ref: '#/components/schemas/ConnectionSpec'
