openapi: 3.1.0
info:
  title: utoipa-axum
  description: Utoipa's axum bindings for seamless integration for the two
  contact:
    name: Juha Kukkonen
    email: juha7kukkonen@gmail.com
  license:
    name: MIT OR Apache-2.0
    identifier: MIT OR Apache-2.0
  version: 0.2.0
paths:
  /peers/{peer_uuid}/endpoints:
    get:
      operationId: list_endpoints
      parameters:
      - name: peer_uuid
        in: path
        required: true
        schema:
          type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/EndpointSpec'
  /peers/{peer_uuid}/endpoints/{endpoint_uuid}:
    get:
      operationId: read_endpoint
      parameters:
      - name: peer_uuid
        in: path
        required: true
        schema:
          type: string
      - name: endpoint_uuid
        in: path
        required: true
        schema:
          type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EndpointSpec'
    put:
      operationId: update_endpoint
      parameters:
      - name: peer_uuid
        in: path
        required: true
        schema:
          type: string
      - name: endpoint_uuid
        in: path
        required: true
        schema:
          type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EndpointSpec'
  /streams:
    get:
      operationId: list_streams
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/StreamSpec'
  /streams/{stream_uuid}:
    get:
      operationId: read_stream
      parameters:
      - name: stream_uuid
        in: path
        required: true
        schema:
          type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StreamSpec'
    put:
      operationId: update_stream
      parameters:
      - name: stream_uuid
        in: path
        required: true
        schema:
          type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StreamSpec'
components:
  schemas:
    AddressAnchorSpec:
      type: object
      title: AddressAnchorSpec
      required:
      - type
      - source_uri
      - repair_uri
      - control_uri
      properties:
        type:
          $ref: '#/components/schemas/AnchorType'
        source_uri:
          type: string
        repair_uri:
          type: string
        control_uri:
          type: string
    AnchorSpec:
      oneOf:
      - type: object
        required:
        - endpoint
        properties:
          endpoint:
            $ref: '#/components/schemas/EndpointAnchorSpec'
      - type: object
        required:
        - address
        properties:
          address:
            $ref: '#/components/schemas/AddressAnchorSpec'
      title: AnchorSpec
    AnchorType:
      type: string
      title: AnchorType
      enum:
      - endpoint
      - address
    EndpointAnchorSpec:
      type: object
      title: EndpointAnchorSpec
      required:
      - type
      - peer_uid
      - endpoint_uid
      properties:
        type:
          $ref: '#/components/schemas/AnchorType'
        peer_uid:
          type: string
        endpoint_uid:
          type: string
    EndpointDir:
      type: string
      enum:
      - input
      - output
      - duplex
    EndpointDriver:
      type: string
      enum:
      - pipewire
    EndpointSpec:
      type: object
      required:
      - peer_uid
      - endpoint_uid
      - endpoint_type
      - stream_direction
      - driver
      - display_name
      - system_name
      properties:
        peer_uid:
          type: string
        endpoint_uid:
          type: string
        endpoint_type:
          $ref: '#/components/schemas/EndpointType'
        stream_direction:
          $ref: '#/components/schemas/EndpointDir'
        driver:
          $ref: '#/components/schemas/EndpointDriver'
        display_name:
          type: string
        system_name:
          type: string
    EndpointType:
      type: string
      enum:
      - system_device
      - streaming_device
    StreamSpec:
      type: object
      title: StreamSpec
      required:
      - stream_uid
      - sources
      - destinations
      properties:
        stream_uid:
          type: string
        sources:
          type: array
          items:
            $ref: '#/components/schemas/AnchorSpec'
        destinations:
          type: array
          items:
            $ref: '#/components/schemas/AnchorSpec'
